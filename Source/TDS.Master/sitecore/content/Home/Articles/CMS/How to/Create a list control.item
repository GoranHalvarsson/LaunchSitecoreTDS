----item----
version: 1
id: {21E1EADE-0E0B-418F-A020-981EB6CBDD8C}
database: master
path: /sitecore/content/Home/Articles/CMS/How to/Create a list control
parent: {44EEE557-704F-4F3D-87B4-187D128C2BAE}
name: Create a list control
master: {00000000-0000-0000-0000-000000000000}
template: {D9019E30-F954-46CC-AA70-3E928C40B5D0}
templatekey: Article

----field----
field: {B0A67B2A-8B07-4E0B-8809-69F751709806}
name: __Tracking
key: __tracking
content-length: 385

<tracking>
  <profile id="{62A90F30-9BAB-425B-8A6D-4AE5A28371D6}" name="Job Function" presets="devon the developer|100||">
    <key name="Analytics" value="1" />
    <key name="Copywriting" value="1" />
    <key name="Personalization and Testing" value="2" />
    <key name="Technology" value="5" />
    <key name="Workflow and Publishing" value="3" />
  </profile>
</tracking>
----field----
field: {F1A1FE9E-A60C-4DDB-A3A0-BB5B29FE732E}
name: __Renderings
key: __renderings
content-length: 37

<r xmlns:p="p" xmlns:s="s" p:p="1" />
----field----
field: {A4F985D9-98B3-4B52-AAAF-4344F6E747C6}
name: __Workflow
key: __workflow
content-length: 38

{E3FBD307-EC4A-4377-BFEB-F732CD5CAF5A}
----version----
language: en
version: 1
revision: acd994cf-b9f3-4e1f-a821-b6efc1b30cc1

----field----
field: {234542DC-C610-4CA8-BAA6-2592A8BCB1D7}
name: Title
key: title
content-length: 21

Create a list control
----field----
field: {00E1D306-96BD-4B32-85B4-CD63C53CC6C1}
name: Abstract
key: abstract
content-length: 183

<p>This article will describe how to create a list control that can be used on this site to display a set of articles based on various criteria--category, level, contributor, etc.</p>
----field----
field: {5A5684BB-8B54-44F6-ABCC-2BADA05ADA5D}
name: Body
key: body
content-length: 9714

<p>There are a few things to consider when creating a control to display a list of items. All the code you see in the following examples can be found in the list lontrols of this site:</p>
<p style="margin: 0in 0in 10pt;"><b>Define the items that will be in the list</b></p>
<p style="margin: 0in 0in 10pt;">We need to determine which items will be displayed in the list. This could be done by simply writing a query to retrieve the items, or you can specify the parent (or sibling) item of your list within the control's <i>Data Source</i> field:</p>
<p style="margin: 0in 0in 10pt;"><img width="421" height="184" alt="Data Source" src="~/media/7692DEE9B3684061BA93395F88588C90.ashx" /></p>
<p style="margin: 0in 0in 10pt;">You can use the following code to retrieve the <i>Data Source</i> item (using the <a href="http://trac.sitecore.net/SublayoutParameterHelper">Sublayout Parameter Helper </a>shared source module):</p>
<div class="code">
<div style="background-color: rgb(221,221,221); overflow: auto;">
<ol style="padding-bottom: 0px; background-color: rgb(255,255,255); margin: 0px 0px 0px 2.5em; padding-left: 5px; padding-right: 0px; padding-top: 0px;">
  <li>public partial class Abstract_List : Sitecore.Sharedsource.Web.UI.Sublayouts.SublayoutBase </li>
  <li style="background: rgb(243,243,243);">{ </li>
  <li>private void Page_Load(object sender, EventArgs e) </li>
  <li style="background: rgb(243,243,243);">{ </li>
  <li>rptList.DataSource = base.DataSourceItem.Children; </li>
  <li style="background: rgb(243,243,243);">rptList.DataBind(); </li>
  <li>} </li>
</ol>
</div>
</div>
<p>You can also run more complex queries against the item in the <i>Data Source</i> field, such as filtering a list of articles by contributor:</p>
<div class="code">
<div style="background-color: rgb(221,221,221); overflow: auto;">
<ol style="padding-bottom: 0px; background-color: rgb(255,255,255); margin: 0px 0px 0px 2.5em; padding-left: 5px; padding-right: 0px; padding-top: 0px;">
  <li>if (Sitecore.Context.Item.Template.Key == "contributor") </li>
  <li style="background: rgb(243,243,243);">{ </li>
  <li>query = SiteConfiguration.GetArticlesByContributor(Sitecore.Context.Item.ID.ToString()); </li>
  <li style="background: rgb(243,243,243);">// we need to just get all of the articles for a contributor unless it was overrridden. </li>
  <li>if (DataSourceItem.ID == Sitecore.Context.Item.ID) { DataSourceItem = SiteConfiguration.GetArticlesRootItem(); } </li>
  <li style="background: rgb(243,243,243);">} </li>
  <li>else </li>
  <li style="background: rgb(243,243,243);">{ </li>
  <li>query = SiteConfiguration.GetArticles(); </li>
  <li style="background: rgb(243,243,243);">} </li>
  <li></li>
  <li style="background: rgb(243,243,243);">// get items by the current contributor... </li>
  <li>List&lt;Item&gt; articles = new List&lt;Item&gt;(); </li>
  <li style="background: rgb(243,243,243);">Item[] items = DataSourceItem.Axes.SelectItems(query); </li>
  <li>if (items != null) </li>
  <li style="background: rgb(243,243,243);">{ </li>
  <li>foreach (Item i in items) </li>
  <li style="background: rgb(243,243,243);">{ </li>
  <li>articles.Add(i); </li>
  <li style="background: rgb(243,243,243);">} </li>
  <li></li>
  <li style="background: rgb(243,243,243);">// we have articles or the items array would have been null </li>
  <li>articles.Sort(new ItemSorterByTitle()); </li>
  <li style="background: rgb(243,243,243);">rptArticles.DataSource = articles; </li>
  <li>rptArticles.DataBind(); </li>
</ol>
</div>
</div>
<p>Lastly, you can use a multilist field in the control properties to allow a content editor to choose exactly which articles they want in the list:</p>
<p><img width="675" height="330" style="width: 614px; height: 278px;" alt="Control Parameters" src="~/media/0DB388C2D77243468CD34DCDBC10C84A.ashx" /></p>
<div class="code">
<div style="background-color: rgb(221,221,221); overflow: auto;">
<ol style="padding-bottom: 0px; background-color: rgb(255,255,255); margin: 0px 0px 0px 2.5em; padding-left: 5px; padding-right: 0px; padding-top: 0px;">
  <li>// we need to retreive the items list from the rendering paramaters. Since these </li>
  <li style="background: rgb(243,243,243);">// are stored as a string, we have to manually split it apart. </li>
  <li>// normally you could use a multilistfield to do this for you. </li>
  <li style="background: rgb(243,243,243);">List&lt;Item&gt; items = new List&lt;Item&gt;(); </li>
  <li>string ItemIds = base.GetParameter("Items"); </li>
  <li style="background: rgb(243,243,243);"></li>
  <li>foreach (string itemId in ItemIds.Split('|')) </li>
  <li style="background: rgb(243,243,243);">{ </li>
  <li>Item item = Sitecore.Context.Database.GetItem(itemId); </li>
  <li style="background: rgb(243,243,243);">if (item != null) </li>
  <li>items.Add(item); </li>
  <li style="background: rgb(243,243,243);">} </li>
  <li></li>
  <li style="background: rgb(243,243,243);">if (items != null &amp;&amp; items.Count &gt; 0) </li>
  <li>{ </li>
  <li style="background: rgb(243,243,243);">rptItems.DataSource = items; </li>
  <li>rptItems.DataBind(); </li>
  <li style="background: rgb(243,243,243);">} </li>
</ol>
</div>
</div>
<p><b></b></p>
<p><b>Determine which fields to display in the list</b></p>
<p>The fields you want to display from the items in the list can be defined in the markup. Use the FieldRenderer inside a repeater to render the appropriate fields that will show in the list control: </p>
<div class="code">
<div style="background-color: rgb(221,221,221); overflow: auto;">
<ol style="padding-bottom: 0px; background-color: rgb(255,255,255); margin: 0px 0px 0px 2.5em; padding-left: 5px; padding-right: 0px; padding-top: 0px;">
  <li>&lt;asp:Repeater ID="rptList" runat="server" OnItemDataBound="rptList_ItemDataBound"&gt; </li>
  <li style="background: rgb(243,243,243);">&lt;ItemTemplate&gt; </li>
  <li>&lt;div class="abstract_item"&gt; </li>
  <li style="background: rgb(243,243,243);">&lt;h3&gt;&lt;sc:FieldRenderer ID="Title" runat="server" FieldName="Title" /&gt;&lt;/h3&gt; </li>
  <li>&lt;sc:FieldRenderer ID="Abstract" runat="server" FieldName="Abstract" /&gt; </li>
  <li style="background: rgb(243,243,243);">&lt;asp:Hyperlink ID="LinkTo" runat="server" class="readmore"&gt; </li>
  <li>&lt;sc:FieldRenderer ID="MoreText" runat="server" FieldName="Text" /&gt; </li>
  <li style="background: rgb(243,243,243);">&lt;/asp:Hyperlink&gt; </li>
  <li>&lt;/div&gt; </li>
  <li style="background: rgb(243,243,243);">&lt;/ItemTemplate&gt; </li>
  <li>&lt;/asp:Repeater&gt; </li>
</ol>
</div>
</div>
<p style="margin: 0in 0in 10pt;"> </p>
<p style="margin: 0in 0in 10pt;">Then pass the values from the code behind:</p>
<div class="code">
<div style="background-color: rgb(221,221,221); overflow: auto;">
<ol style="padding-bottom: 0px; background-color: rgb(255,255,255); margin: 0px 0px 0px 2.5em; padding-left: 5px; padding-right: 0px; padding-top: 0px;">
  <li>Item node = (Item)e.Item.DataItem; </li>
  <li style="background: rgb(243,243,243);"></li>
  <li>HyperLink LinkTo = (HyperLink)e.Item.FindControl("LinkTo"); </li>
  <li style="background: rgb(243,243,243);">FieldRenderer Title = (FieldRenderer)e.Item.FindControl("Title"); </li>
  <li>FieldRenderer Abstract = (FieldRenderer)e.Item.FindControl("Abstract"); </li>
  <li style="background: rgb(243,243,243);">FieldRenderer MoreText = (FieldRenderer)e.Item.FindControl("MoreText"); </li>
  <li></li>
  <li style="background: rgb(243,243,243);">if (LinkTo != null &amp;&amp; Title != null &amp;&amp; Abstract != null &amp;&amp; MoreText != null) </li>
  <li>{ </li>
  <li style="background: rgb(243,243,243);">LinkTo.NavigateUrl = LinkManager.GetItemUrl(node); </li>
  <li>Title.Item = node; </li>
  <li style="background: rgb(243,243,243);">Abstract.Item = node; </li>
  <li>MoreText.Item = SiteConfiguration.GetCommonTextItem("Read More"); </li>
  <li style="background: rgb(243,243,243);">} </li>
</ol>
</div>
</div>
<p><b></b></p>
<p><b>Define how the items will be sorted</b></p>
<p><b></b></p>
<p>Now you can determine how these list items will be sorted. One way is to use the Array.Sort() method with an item comparer. You can implement a solution based on the following example that sorts the children of the context item using the Title field comparer (also see <a href="~/link.aspx?_id=055D77DF1ADE4091989F87C1DC4BC981&amp;_z=z">Create a custom sorting routine for content</a>):</p>
<div class="code">
<div style="background-color: rgb(221,221,221); overflow: auto;">
<ol style="padding-bottom: 0px; background-color: rgb(255,255,255); margin: 0px 0px 0px 2.5em; padding-left: 5px; padding-right: 0px; padding-top: 0px;">
  <li>Sitecore.Data.Items.Item contextItem = Sitecore.Context.Item; </li>
  <li style="background: rgb(243,243,243);">Sitecore.Data.Items.Item[] items = contextItem.Children.ToArray(); </li>
  <li>Sitecore.Sharedsource.Data.Comparers.TitleComparer titleComparer = new </li>
  <li style="background: rgb(243,243,243);">Sitecore.Sharedsource.Data.Comparers.TitleComparer(); </li>
  <li>Array.Sort(items, titleComparer); </li>
</ol>
</div>
</div>
<p><b>Tip</b></p>
<p style="margin: 0in 0in 10pt 0.5in;">To use one of the item comparers used by the child sorting rules described in the <a href="http://launch.sitecoreusa.net/sitecore/shell/Controls/Rich%20Text%20Editor/~/link.aspx?_id=055D77DF1ADE4091989F87C1DC4BC981&amp;_z=z">Create a custom sorting routine for content</a> article, use the class specified in the Type field in the Data section of the corresponding child sorting rule definition item beneath the <strong>/Sitecore/System/Settings/Subitems Sorting</strong> item.</p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
----field----
field: {24DDFF9E-D4D8-46C8-99A6-6B01F5251B8F}
name: Use case solution statement
key: use case solution statement
content-length: 76

"I want to be able to display a list of articles based on specific criteria"
----field----
field: {6727E2E9-15AA-401B-A612-C3A82D1F02EE}
name: Prerequisites
key: prerequisites
content-length: 38

{D754836B-5E0F-4BDC-AEE0-725D4C96061B}
----field----
field: {98A14AED-B794-4B64-8C76-2D11BFF917D0}
name: Categories
key: categories
content-length: 38

{4B251042-A938-4D7B-9458-728C56C0493A}
----field----
field: {82D725ED-6707-4532-86A6-5444E34332FD}
name: Contributors
key: contributors
content-length: 38

{33879340-14B2-4BF2-93A2-FCC54C820BAD}
----field----
field: {D7229DBA-B952-4D82-A5A0-459C69618D45}
name: Menu Title
key: menu title
content-length: 21

Create a list control
----field----
field: {52807595-0F8F-4B20-8D2A-CB71D28C6103}
name: __Owner
key: __owner
content-length: 14

sitecore\admin
----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 15

20110713T082800
----field----
field: {5DD74568-4D4B-44C1-B513-0AF5F4CDA34F}
name: __Created by
key: __created by
content-length: 14

sitecore\admin
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

acd994cf-b9f3-4e1f-a821-b6efc1b30cc1
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 34

20121211T171225:634908427452304971
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
----field----
field: {3E431DE1-525E-47A3-B6B0-1CCBEC3A8C98}
name: __Workflow state
key: __workflow state
content-length: 38

{3E42AE7F-CB44-415C-91D2-B16E9E1ECB5A}
----field----
field: {001DD393-96C5-490B-924A-B0F25CD9EFD8}
name: __Lock
key: __lock
content-length: 5

<r />
