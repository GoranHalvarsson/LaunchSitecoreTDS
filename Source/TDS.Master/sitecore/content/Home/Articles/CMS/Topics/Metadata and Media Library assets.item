----item----
version: 1
id: {355ADC97-00BA-40DC-B865-90FE92EDD7B7}
database: master
path: /sitecore/content/Home/Articles/CMS/Topics/Metadata and Media Library assets
parent: {A9A2F7FA-B1BB-4F15-B694-241340D7D997}
name: Metadata and Media Library assets
master: {00000000-0000-0000-0000-000000000000}
template: {D9019E30-F954-46CC-AA70-3E928C40B5D0}
templatekey: Article

----field----
field: {B0A67B2A-8B07-4E0B-8809-69F751709806}
name: __Tracking
key: __tracking
content-length: 434

<tracking>
  <profile id="{62A90F30-9BAB-425B-8A6D-4AE5A28371D6}" name="Job Function" presets="connie the content manager|80||devon the developer|20||">
    <key name="Analytics" value="1" />
    <key name="Copywriting" value="4.2" />
    <key name="Personalization and Testing" value="2.80000019" />
    <key name="Technology" value="1" />
    <key name="Workflow and Publishing" value="1.4000001" />
  </profile>
</tracking>
----field----
field: {F1A1FE9E-A60C-4DDB-A3A0-BB5B29FE732E}
name: __Renderings
key: __renderings
content-length: 37

<r xmlns:p="p" xmlns:s="s" p:p="1" />
----field----
field: {A4F985D9-98B3-4B52-AAAF-4344F6E747C6}
name: __Workflow
key: __workflow
content-length: 38

{E3FBD307-EC4A-4377-BFEB-F732CD5CAF5A}
----version----
language: en
version: 1
revision: 7fb459a0-5b8c-4a17-88f7-dd0f1fbddcb2

----field----
field: {234542DC-C610-4CA8-BAA6-2592A8BCB1D7}
name: Title
key: title
content-length: 39

Adding metadata to Media Library assets
----field----
field: {00E1D306-96BD-4B32-85B4-CD63C53CC6C1}
name: Abstract
key: abstract
content-length: 209

<p>When you are dealing with large numbers of documents, it's no fun to have to manually add them to each and every page. Why go through all that effort when you can have metadata do all that work for you?</p>
----field----
field: {5A5684BB-8B54-44F6-ABCC-2BADA05ADA5D}
name: Body
key: body
content-length: 9179

<p>For this article, it makes sense to read "<a href="~/link.aspx?_id=01A4232F5E264F52B0578E75E5FB5A7C&amp;_z=z">All about Taxonomy</a>" first. It will explain the overall concepts and a similar implementation - but with content, rather than assets. This article will focus on Media Library assets in particular, and will leave out most of the general concepts.</p>
<h3>Decide the scope</h3>
<p>All of the document-based templates (Doc, Docx, Pdf) inherit from the Document template, which then inherits from file. Jpeg inherits from Image, which inherits from File. So, if you want your metadata categorization to apply to any file (JPEG, PDF, Word Document, etc.) simply add your metadata fields to the File template and these will inherit upwards. At the opposite end, if you only want this to apply to PDFs only apply it to that template.</p>
<p>Also ensure that you use either the versioned, or unversioned templates, depending on what your versioning practice is for media items.</p>
<h3>Add the appropriate fields to the template</h3>
<p>Once you've reached the right template (let's assume you want this to apply to all files - using this template- /sitecore/templates/System/Media/Unversioned/File ) add the metadata fields and the audience or product reference as appropriate. If you need to know how to reference other content and controlled vocabularies, refer back to the "<a href="~/link.aspx?_id=01A4232F5E264F52B0578E75E5FB5A7C&amp;_z=z">All about Taxonomy</a>" article.</p>
<h3>Apply metadata to your assets</h3>
<p>As you'll see in the Content Editor, your files now have an additional section of fields for your metadata. You can apply the appropriate metadata to each asset as appropriate (see example below).</p>
<p><img alt="Metadata Selection Screenshot" src="~/media/19BA7CED25564717A9D6BAC9D2F5AA03.ashx" width="522" height="176"></p>
<h4>Example implementation: Metadata-filtered document list </h4>
<p>We'll reuse the same fields from the previous article. In this case, the audience. We are going to configure the component to invoke a wizard, prompting the author to select an audience. After creating an XSL rendering using most of the code below, you need to configure two values on that rendering:</p>
<ol>
  <li>Datasource Location. Where the wizard will look for metadata to select. In this case, /sitecore/Content/globals/metadata/audience </li>
  <li>Datasource Template. What item template to restict to (and/or create new values in that category). In this case "Standard Text" </li>
</ol>
<p>When a user drops your component onto a page, they are prompted to pick a metadata value:</p>
<p><img alt="Associated Content Picker Screenshot" src="~/media/8FE886892CCD4B13994A730DC5B6E870.ashx" width="476" height="497"></p>
<p>This will pass that datasource as the "current context" to your rendering, allowing you to use that value to look up content that is tagged appropriately. </p>
<h3>Example implementation: Tag assets with a page (i.e. a product/service and have them appear on that page</h3>
<p>Ironically, in both cases, the source code is identical. In the first case, this is because the "context - $sc_item" is being overridden and the metadata tag is being passed as a parameter. In the second case, $sc_item is the default - the current item.</p>
<p>The only difference is that in this case, you don't use the parameters to pass the metadata - your current context "i.e. I am on Product X" is the current context.</p>
<h3>Source Code: </h3>
<p>Variable for the location of your media items you wish to reference:</p>
<div class="code">
<div style="overflow: auto; background-color: rgb(221, 221, 221);">
<ol style="margin: 0px 0px 0px 2em; padding: 0px 0px 0px 5px; background-color: rgb(255, 255, 255);">
  <li><span style="color: rgb(0, 0, 255);">&lt;</span><span style="color: rgb(163, 21, 21);">xsl:variable</span><span style="color: rgb(0, 0, 255);"> </span><span style="color: rgb(255, 0, 0);">name</span><span style="color: rgb(0, 0, 255);">=</span>"<span style="color: rgb(0, 0, 255);">docs_root</span>"<span style="color: rgb(0, 0, 255);"> </span><span style="color: rgb(255, 0, 0);">select</span><span style="color: rgb(0, 0, 255);">=</span>"<span style="color: rgb(0, 0, 255);">sc:item('/sitecore/media library/Files/Downloadable PDFs',.)</span>"<span style="color: rgb(0, 0, 255);"> /&gt;</span> </li>
</ol>
</div>
</div>
<p>Template code: </p>
<div class="code">
<div style="overflow: auto; background-color: rgb(221, 221, 221);">
<ol style="margin: 0px 0px 0px 2.5em; padding: 0px 0px 0px 5px; background-color: rgb(255, 255, 255);">
  <li><span style="color: rgb(0, 0, 255);">&lt;</span><span style="color: rgb(163, 21, 21);">xsl:template</span><span style="color: rgb(0, 0, 255);"> </span><span style="color: rgb(255, 0, 0);">match</span><span style="color: rgb(0, 0, 255);">=</span>"<span style="color: rgb(0, 0, 255);">*</span>"<span style="color: rgb(0, 0, 255);"> </span><span style="color: rgb(255, 0, 0);">mode</span><span style="color: rgb(0, 0, 255);">=</span>"<span style="color: rgb(0, 0, 255);">main</span>"<span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li style="background-color: rgb(243, 243, 243);"><span style="color: rgb(0, 0, 255);">&lt;</span><span style="color: rgb(163, 21, 21);">h2</span><span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li><span style="color: rgb(0, 0, 255);">&lt;</span><span style="color: rgb(163, 21, 21);">xsl:value-of</span><span style="color: rgb(0, 0, 255);"> </span><span style="color: rgb(255, 0, 0);">select</span><span style="color: rgb(0, 0, 255);">=</span>"<span style="color: rgb(0, 0, 255);">sc:fld('text',.)</span>"<span style="color: rgb(0, 0, 255);"> /&gt;</span> Documents </li>
  <li style="background-color: rgb(243, 243, 243);"><span style="color: rgb(0, 0, 255);">&lt;/</span><span style="color: rgb(163, 21, 21);">h2</span><span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li><span style="color: rgb(0, 0, 255);">&lt;</span><span style="color: rgb(163, 21, 21);">ul</span><span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li style="background-color: rgb(243, 243, 243);"><span style="color: rgb(0, 0, 255);">&lt;</span><span style="color: rgb(163, 21, 21);">xsl:for-each</span><span style="color: rgb(0, 0, 255);"> </span><span style="color: rgb(255, 0, 0);">select</span><span style="color: rgb(0, 0, 255);">=</span>"<span style="color: rgb(0, 0, 255);">$docs_root/item</span>"<span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li><span style="color: rgb(0, 0, 255);">&lt;</span><span style="color: rgb(163, 21, 21);">xsl:if</span><span style="color: rgb(0, 0, 255);"> </span><span style="color: rgb(255, 0, 0);">test</span><span style="color: rgb(0, 0, 255);">=</span>"<span style="color: rgb(0, 0, 255);">contains(sc:fld('audience',.), $sc_item/@id)</span>"<span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li style="background-color: rgb(243, 243, 243);"><span style="color: rgb(0, 0, 255);">&lt;</span><span style="color: rgb(163, 21, 21);">li</span><span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li><span style="color: rgb(0, 0, 255);">&lt;</span><span style="color: rgb(163, 21, 21);">a</span><span style="color: rgb(0, 0, 255);"> </span><span style="color: rgb(255, 0, 0);">href</span><span style="color: rgb(0, 0, 255);">=</span>"{<span style="color: rgb(0, 0, 255);">concat('/',sc:GetMediaUrl(.))}</span>"<span style="color: rgb(0, 0, 255);"> </span><span style="color: rgb(255, 0, 0);">target</span><span style="color: rgb(0, 0, 255);">=</span>"<span style="color: rgb(0, 0, 255);">_blank</span>"<span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li style="background-color: rgb(243, 243, 243);"><span style="color: rgb(0, 0, 255);">&lt;</span><span style="color: rgb(163, 21, 21);">sc:text</span><span style="color: rgb(0, 0, 255);"> </span><span style="color: rgb(255, 0, 0);">field</span><span style="color: rgb(0, 0, 255);">=</span>"<span style="color: rgb(0, 0, 255);">title</span>"<span style="color: rgb(0, 0, 255);"> /&gt;</span> </li>
  <li><span style="color: rgb(0, 0, 255);">&lt;/</span><span style="color: rgb(163, 21, 21);">a</span><span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li style="background-color: rgb(243, 243, 243);"><span style="color: rgb(0, 0, 255);">&lt;/</span><span style="color: rgb(163, 21, 21);">li</span><span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li><span style="color: rgb(0, 0, 255);">&lt;/</span><span style="color: rgb(163, 21, 21);">xsl:if</span><span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li style="background-color: rgb(243, 243, 243);"><span style="color: rgb(0, 0, 255);">&lt;/</span><span style="color: rgb(163, 21, 21);">xsl:for-each</span><span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li><span style="color: rgb(0, 0, 255);">&lt;/</span><span style="color: rgb(163, 21, 21);">ul</span><span style="color: rgb(0, 0, 255);">&gt;</span> </li>
  <li style="background-color: rgb(243, 243, 243);"><span style="color: rgb(0, 0, 255);">&lt;/</span><span style="color: rgb(163, 21, 21);">xsl:template</span><span style="color: rgb(0, 0, 255);">&gt;</span> </li>
</ol>
</div>
</div>
----field----
field: {24DDFF9E-D4D8-46C8-99A6-6B01F5251B8F}
name: Use case solution statement
key: use case solution statement
content-length: 107

"I want to be able to tag my asset and have them automatically appear on the site in the correct locations"
----field----
field: {EFC4A071-5574-404A-8206-FB502FCA909B}
name: Prerequisite Articles
key: prerequisite articles
content-length: 38

{01A4232F-5E26-4F52-B057-8E75E5FB5A7C}
----field----
field: {82D725ED-6707-4532-86A6-5444E34332FD}
name: Contributors
key: contributors
content-length: 38

{15DD3569-2798-420D-87DA-4FA39281FB7E}
----field----
field: {36A36DB2-3C72-4534-AE62-551FABE299FB}
name: Keywords
key: keywords
content-length: 17

metadata taxonomy
----field----
field: {048861EF-4F76-46DC-AA49-48D9F173D1B7}
name: External References
key: external references
content-length: 38

{01A4232F-5E26-4F52-B057-8E75E5FB5A7C}
----field----
field: {D7229DBA-B952-4D82-A5A0-459C69618D45}
name: Menu Title
key: menu title
content-length: 39

Adding metadata to Media Library assets
----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 15

20111028T085200
----field----
field: {5DD74568-4D4B-44C1-B513-0AF5F4CDA34F}
name: __Created by
key: __created by
content-length: 12

sitecore\mde
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

7fb459a0-5b8c-4a17-88f7-dd0f1fbddcb2
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 34

20121211T170345:634908422258745667
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
----field----
field: {3E431DE1-525E-47A3-B6B0-1CCBEC3A8C98}
name: __Workflow state
key: __workflow state
content-length: 38

{3E42AE7F-CB44-415C-91D2-B16E9E1ECB5A}
----field----
field: {001DD393-96C5-490B-924A-B0F25CD9EFD8}
name: __Lock
key: __lock
content-length: 5

<r />
